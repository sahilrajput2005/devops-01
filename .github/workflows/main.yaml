name: Deploy Full Application (Backend + Frontend)

on:
  push:
    branches:
      - main

  workflow_dispatch:

concurrency:
  group: full-deploy
  cancel-in-progress: true

jobs:
  backend-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Ensure backend folder permissions
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo mkdir -p /home/${{ secrets.EC2_USER }}/backend
            sudo chown -R ubuntu:ubuntu /home/${{ secrets.EC2_USER }}/backend
            sudo chmod -R 755 /home/${{ secrets.EC2_USER }}/backend

      - name: Upload backend to EC2 (SCP)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: backend/
          target: /home/${{ secrets.EC2_USER }}/backend
          overwrite: true

      - name: Deploy backend on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          script: |
            sudo apt update -y
            sudo apt install -y python3.12-venv
            cd /home/${{ secrets.EC2_USER }}/backend

            python3 -m venv .venv || true
            source .venv/bin/activate

            python -m pip install --upgrade pip
            pip install -r requirements.txt

            fuser -k 8000/tcp || true
            nohup python manage.py runserver 0.0.0.0:8000 > logs.out 2>&1 &
            echo "✅ Backend deployment complete!"

  frontend-deploy:
    runs-on: ubuntu-latest
    needs: backend-deploy   # waits until backend is done
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build frontend
        run: |
          cd frontend
          npm install
          npm run build

      - name: Upload frontend to EC2 (SCP)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: frontend/build/
          target: /home/${{ secrets.EC2_USER }}/frontend
          overwrite: true

      - name: Deploy frontend on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo mkdir -p /var/www/frontend
            sudo cp -r /home/${{ secrets.EC2_USER }}/frontend/* /var/www/frontend/
            sudo chown -R www-data:www-data /var/www/frontend
            echo "✅ Frontend deployment complete!"
